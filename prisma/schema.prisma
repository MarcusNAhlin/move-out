// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

model User {
  id                  Int       @id @default(autoincrement())
  email               String    @unique
  hash_pass           String
  verified            Boolean   @default(false)
  deactivated         DateTime?
  lastAction          DateTime  @default(now())
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  role                Role      @default(USER)
  token               VerificationToken?
  deleteToken         DeleteToken?
  labels              Box[]
}

enum Role {
  USER
  ADMIN
}

model VerificationToken {
  id        Int       @id @default(autoincrement())
  userId    Int       @unique
  token     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expires   DateTime
  user      User      @relation(fields: [userId], references: [id])
}

model DeleteToken {
    id        Int       @id @default(autoincrement())
    userId    Int       @unique
    token     String    @unique
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    expires   DateTime
    user      User      @relation(fields: [userId], references: [id])
}

model Box {
  id            String       @id @default(uuid())
  userId        Int
  title         String
  type          LabelType @default(NORMAL)
  private       Boolean   @default(false)
  pin           String?
  text          String?
  imageName     String?
  soundName     String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [userId], references: [id])
}

enum LabelType {
  NORMAL
  FRAGILE
  HAZARDOUS
}
